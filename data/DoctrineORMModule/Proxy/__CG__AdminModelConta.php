<?php

namespace DoctrineORMModule\Proxy\__CG__\Admin\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Conta extends \Admin\Model\Conta implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

        return parent::__set($name, $value);
    }



    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'inputFilter', 'id', 'usuario_id', 'conta', 'banco', 'saldo', 'criacao', 'modificacao', 'primaryKeyField', 'tableName');
        }

        return array('__isInitialized__', 'inputFilter', 'id', 'usuario_id', 'conta', 'banco', 'saldo', 'criacao', 'modificacao', 'primaryKeyField', 'tableName');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Conta $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuario_id()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuario_id', array());

        return parent::getUsuario_id();
    }

    /**
     * {@inheritDoc}
     */
    public function getConta()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConta', array());

        return parent::getConta();
    }

    /**
     * {@inheritDoc}
     */
    public function getBanco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBanco', array());

        return parent::getBanco();
    }

    /**
     * {@inheritDoc}
     */
    public function getSaldo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSaldo', array());

        return parent::getSaldo();
    }

    /**
     * {@inheritDoc}
     */
    public function getCriacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCriacao', array());

        return parent::getCriacao();
    }

    /**
     * {@inheritDoc}
     */
    public function getModificacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModificacao', array());

        return parent::getModificacao();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($valor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($valor));

        return parent::setId($valor);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuario_id($valor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuario_id', array($valor));

        return parent::setUsuario_id($valor);
    }

    /**
     * {@inheritDoc}
     */
    public function setConta($valor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConta', array($valor));

        return parent::setConta($valor);
    }

    /**
     * {@inheritDoc}
     */
    public function setBanco($valor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBanco', array($valor));

        return parent::setBanco($valor);
    }

    /**
     * {@inheritDoc}
     */
    public function setSaldo($valor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSaldo', array($valor));

        return parent::setSaldo($valor);
    }

    /**
     * {@inheritDoc}
     */
    public function setCriacao($valor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCriacao', array($valor));

        return parent::setCriacao($valor);
    }

    /**
     * {@inheritDoc}
     */
    public function setModificacao($valor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModificacao', array($valor));

        return parent::setModificacao($valor);
    }

    /**
     * {@inheritDoc}
     */
    public function setInputFilter(\Zend\InputFilter\InputFilterInterface $inputFilter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputFilter', array($inputFilter));

        return parent::setInputFilter($inputFilter);
    }

    /**
     * {@inheritDoc}
     */
    public function getInputFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputFilter', array());

        return parent::getInputFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function getTableName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTableName', array());

        return parent::getTableName();
    }

    /**
     * {@inheritDoc}
     */
    public function setData($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', array($data));

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', array());

        return parent::getData();
    }

    /**
     * {@inheritDoc}
     */
    public function exchangeArray($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exchangeArray', array($data));

        return parent::exchangeArray($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', array());

        return parent::getArrayCopy();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
